package scanner

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"os"
	"os/exec"
	"strings"

	helpers "github.com/aushafy/cryptonice-api/helpers/scanner"
	"github.com/gin-gonic/gin"
)

func RunHTTPScanner(c *gin.Context) {
	param := c.Param("url")

	cryptoniceExecutable, _ := exec.LookPath("cryptonice")

	// cryptonice run command
	cmdCryptoniceScan := &exec.Cmd{
		Path:   cryptoniceExecutable,
		Args:   []string{cryptoniceExecutable, param, "--json_out"},
		Stdout: os.Stdout,
		Stderr: os.Stderr,
	}

	// run cryptonice command
	if err := cmdCryptoniceScan.Run(); err != nil {
		fmt.Println("Error: ", err)
	}

	// read cryptonice output json file
	filename := strings.Join([]string{param, "json"}, ".")

	data, err := ioutil.ReadFile(filename)
	if err != nil {
		fmt.Println(err)
	}

	// json data
	var obj helpers.AutoGenerated

	// unmarshal data to json data
	err = json.Unmarshal(data, &obj)
	if err != nil {
		fmt.Println("Error: ", err)
	}

	// return response as JSON body to frontend
	response := helpers.APIResponse("HTTPS Scan Result", http.StatusOK, "success", obj)

	c.JSON(http.StatusOK, response)
}
